{"version":3,"file":"component---src-layouts-sub-project-page-layout-component-tsx-content-file-path-src-content-projects-test-project-a-sub-test-project-a-index-mdx-49d713ef4c47160f0417.js","mappings":"sNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,OACHC,EAAAA,EAAAA,MAAsBL,EAAMM,YAC/B,OAAOC,EAAAA,cAAoBN,EAAYG,GAAI,KAAM,aACnD,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOQ,QAASC,GAAaP,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,MAAsBL,EAAMM,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWT,EAAOO,EAAAA,cAAoBR,EAAmBC,IAAUD,EAAkBC,EAC9H,E,8BCNA,MAAMU,EAAa,CACjBC,KAAIA,EAAAA,IAEAC,EAAgBC,IACpB,IAAI,KAACC,EAAI,SAAEC,KAAaf,GAASa,EACjC,OAAON,EAAAA,cAAoBS,EAAAA,EAAY,CACrCC,UAAWjB,GACVO,EAAAA,cAAoBW,EAAAA,EAAa,KAAMX,EAAAA,cAAoBI,EAAAA,GAAM,CAClEQ,GAAI,aACH,oBAAqBZ,EAAAA,cAAoB,KAAM,KAAMO,EAAKM,IAAIC,YAAYC,OAAQf,EAAAA,cAAoBgB,EAAAA,GAAa,CACpHjB,WAAYI,GACXK,IAAW,EAGD,SAASS,EAAiBxB,GACvC,OAAOO,EAAAA,cAAoBK,EAAeZ,EAAOO,EAAAA,cAAoBkB,EAAqBzB,GAC5F,C,8FCWO,MAAM0B,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBrB,GAC/B,MAAMsB,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfpB,EACFA,EAAWsB,GAGb,IAAIA,KAAsBtB,IAChC,CAACsB,EAAmBtB,GACzB,CAGA,MAAMuB,EAAc,CAAC,EAQd,SAASN,GAAY,WAACjB,EAAU,SAAES,EAAQ,qBAAEe,IAEjD,IAAIC,EAWJ,OAREA,EADED,EAEsB,mBAAfxB,EACHA,EAAW,CAAC,GACZA,GAAcuB,EAEJF,EAAiBrB,GAG5B,gBACLoB,EAAWM,SACX,CAACC,MAAOF,GACRhB,EAEJ,C","sources":["webpack://niklas-buhl-personal-website/./src/content/projects/test-project-a/sub-test-project-a/index.mdx","webpack://niklas-buhl-personal-website/./src/layouts/subProjectPageLayout.component.tsx","webpack://niklas-buhl-personal-website/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.h2, null, \"Sub Header\");\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/nb-website-dev/nb-website-dev/src/content/projects/test-project-a/sub-test-project-a/index.mdx\";\nimport React from \"react\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PageLayout from \"./pageLayout.component\";\nimport PageSection from \"../components/pageSection/pageSection.component\";\nconst shortcodes = {\n  Link\n};\nconst ProjectLayout = _ref => {\n  let {data, children, ...props} = _ref;\n  return React.createElement(PageLayout, {\n    PageProps: props\n  }, React.createElement(PageSection, null, React.createElement(Link, {\n    to: \"/projects\"\n  }, \"Back to projects\"), React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, {\n    components: shortcodes\n  }, children)));\n};\nProjectLayout\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ProjectLayout, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst query = \"2499994864\";\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","_provideComponents","components","React","wrapper","MDXLayout","shortcodes","Link","ProjectLayout","_ref","data","children","PageLayout","PageProps","PageSection","to","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}